import sympy
import random


def generate_rsa_keypair(bits):
    # 生成两个大质数 p 和 q
    p = sympy.randprime(2 ** (bits // 2 - 1), 2 ** (bits // 2))
    q = sympy.randprime(2 ** (bits // 2 - 1), 2 ** (bits // 2))

    # 计算 n = p * q
    n = p * q

    # 计算欧拉函数 φ(n) = (p-1) * (q-1)
    phi_n = (p - 1) * (q - 1)

    # 选择一个小于 φ(n) 的公钥指数 e，通常选择 65537
    e = 65537
    # 确保 e 与 φ(n) 互质
    while sympy.gcd(e, phi_n) != 1:
        e = random.randint(2, phi_n - 1)

    # 计算私钥指数 d，使得 d ≡ e^(-1) (mod φ(n))
    d = sympy.mod_inverse(e, phi_n)

    return n, e, d


bits = 32
n, e, d = generate_rsa_keypair(bits)
print(f"RSA parameters:\nn = {n}\ne = {e}\nd = {d}")